"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[503],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=n.createContext({}),d=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=d(a),c=s,m=h["".concat(i,".").concat(c)]||h[c]||u[c]||r;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function c(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,o=new Array(r);o[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},4043:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=a(7462),s=(a(7294),a(3905));const r={id:"api_auth_methods",title:"Auth Methods",sidebar_position:3},o="Auth method API Calls",l={unversionedId:"api_auth_methods",id:"api_auth_methods",title:"Auth Methods",description:"[POST] Manage Auth Methods - Create New Auth Method",source:"@site/docs/api_authmethods.md",sourceDirName:".",slug:"/api_auth_methods",permalink:"/argo-api-authn/docs/api_auth_methods",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"api_auth_methods",title:"Auth Methods",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Service Types",permalink:"/argo-api-authn/docs/api_service_types"},next:{title:"Auth Certificate",permalink:"/argo-api-authn/docs/auth_certificate"}},i={},d=[{value:"POST Manage Auth Methods - Create New Auth Method",id:"post-manage-auth-methods---create-new-auth-method",level:2},{value:"API Key Auth methods",id:"api-key-auth-methods",level:2},{value:"Fields",id:"fields",level:4},{value:"Request",id:"request",level:3},{value:"Example request",id:"example-request",level:3},{value:"Post Body",id:"post-body",level:3},{value:"Headers Auth methods",id:"headers-auth-methods",level:2},{value:"Fields",id:"fields-1",level:4},{value:"Request",id:"request-1",level:3},{value:"Example request",id:"example-request-1",level:3},{value:"Post Body",id:"post-body-1",level:3},{value:"Response",id:"response",level:3},{value:"GET Manage Auth Methods - List One Auth Method",id:"get-manage-auth-methods---list-one-auth-method",level:2},{value:"Request",id:"request-2",level:3},{value:"Example request",id:"example-request-2",level:3},{value:"Success Response",id:"success-response",level:4},{value:"GET Manage Auth Methods - List All Auth Methods",id:"get-manage-auth-methods---list-all-auth-methods",level:2},{value:"Request",id:"request-3",level:3},{value:"Example request",id:"example-request-3",level:3},{value:"Success Response",id:"success-response-1",level:4},{value:"PUT Manage Auth Methods - Update an existing auth method",id:"put-manage-auth-methods---update-an-existing-auth-method",level:2},{value:"Example request",id:"example-request-4",level:3},{value:"Post Body",id:"post-body-2",level:3},{value:"Response",id:"response-1",level:3},{value:"DELETE Manage Auth Methods - Delete an auth method",id:"delete-manage-auth-methods---delete-an-auth-method",level:2},{value:"Request",id:"request-4",level:3},{value:"Response",id:"response-2",level:3},{value:"Success Response",id:"success-response-2",level:4}],p={toc:d};function u(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"auth-method-api-calls"},"Auth method API Calls"),(0,s.kt)("h2",{id:"post-manage-auth-methods---create-new-auth-method"},"[POST]"," Manage Auth Methods - Create New Auth Method"),(0,s.kt)("p",null,"This request creates a new auth method for the given service type. The type of the auth method\nas well as some of its predefined fields will be decided by the service-type's ",(0,s.kt)("inlineCode",{parentName:"p"},"auth_method")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"type "),"fields.\nE.g. for a service-type of type ",(0,s.kt)("inlineCode",{parentName:"p"},"ams")," with an auth_method of type ",(0,s.kt)("inlineCode",{parentName:"p"},"api-key"),", it will create an api-key auth method\nwith predeclared fields for ",(0,s.kt)("inlineCode",{parentName:"p"},"path")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"retrieval_field")," that are common across all type ",(0,s.kt)("inlineCode",{parentName:"p"},"ams")," service-types.\nOf course you can always override the default's if you like."),(0,s.kt)("h2",{id:"api-key-auth-methods"},"API Key Auth methods"),(0,s.kt)("h4",{id:"fields"},"Fields"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"path: Combined with the ",(0,s.kt)("inlineCode",{parentName:"li"},"host")," and the ",(0,s.kt)("inlineCode",{parentName:"li"},"port")," is represents the URL where the external resource is located. We use it to map the x509 certificate or any other auth mechanism to the needed token"),(0,s.kt)("li",{parentName:"ul"},"access_key: In the case of an api-key method, the access key specifies te ",(0,s.kt)("inlineCode",{parentName:"li"},"key")," to use in order to access the external resource")),(0,s.kt)("h3",{id:"request"},"Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /v1/service-types/{Name}/authm`\n")),(0,s.kt)("h3",{id:"example-request"},"Example request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl -X POST -H "Content-Type: application/json"\n  "https://{URL}/v1/service-types/{Name}/authm?key={key_in_the_config}"\n')),(0,s.kt)("h3",{id:"post-body"},"Post Body"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'        {\n            "access_key": "key1",\n            "host": "127.0.0.1",\n            "port": 9000,\n        }\n')),(0,s.kt)("h2",{id:"headers-auth-methods"},"Headers Auth methods"),(0,s.kt)("h4",{id:"fields-1"},"Fields"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"path: Combined with the ",(0,s.kt)("inlineCode",{parentName:"li"},"host")," and the ",(0,s.kt)("inlineCode",{parentName:"li"},"port")," is represents the URL where the external resource is located. We use it to map the x509 certificate or any other auth mechanism to the needed token"),(0,s.kt)("li",{parentName:"ul"},"headers: A collection of ",(0,s.kt)("inlineCode",{parentName:"li"},"key value pairs")," that will be used as request headers when accessing the respective service type")),(0,s.kt)("h3",{id:"request-1"},"Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /v1/service-types/{Name}/authm`\n")),(0,s.kt)("h3",{id:"example-request-1"},"Example request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl -X POST -H "Content-Type: application/json"\n  "https://{URL}/v1/service-types/{Name}/authm?key={key_in_the_config}"\n')),(0,s.kt)("h3",{id:"post-body-1"},"Post Body"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'        {\n            "headers": {\n                "header-1": "value-1",\n                "header-2": "value-2"\n            },\n            "host": "127.0.0.1",\n            "port": 9000\n        }\n')),(0,s.kt)("h3",{id:"response"},"Response"),(0,s.kt)("p",null,"If the request is successful, the response contains the newly created auth method."),(0,s.kt)("p",null,"Success Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"201 CREATED")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'        {\n            "headers": {\n                "header-1": "value-1",\n                "header-2": "value-2"\n            },\n            "host": "127.0.0.1",\n            "service_uuid": "da22b2d4-ba6c-43ca-b28d-400sd0a5d83e",\n            "port": 9000,\n            "type": "api-key",\n            "uuid": "da22b2d4-8ip0-43ca-b28d-500sd0a5d876e",\n            "created_on": "2018-05-05T18:04:05Z"\n        }\n')),(0,s.kt)("p",null,"Please refer to section ",(0,s.kt)("a",{parentName:"p",href:"/argo-api-authn/docs/api_errors"},"Errors")," to see all possible Errors"),(0,s.kt)("h2",{id:"get-manage-auth-methods---list-one-auth-method"},"[GET]"," Manage Auth Methods - List One Auth Method"),(0,s.kt)("h3",{id:"request-2"},"Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /v1/services/{service}/hosts/{host}/authm\n")),(0,s.kt)("h3",{id:"example-request-2"},"Example request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'  curl -X GET -H "Content-Type: application/json"\n  "https://{URL}/v1/services/{service}/hosts/{host}/authm?key={key_in_the_config}"\n')),(0,s.kt)("p",null,"If the request is successful, the response contains information for the requested auth method."),(0,s.kt)("h4",{id:"success-response"},"Success Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'        {\n            "access_key": "key1",\n            "host": "127.0.0.1",\n            "service_uuid": "da22b2d4-ba6c-43ca-b28d-400sd0a5d83e",\n            "port": 9000,\n            "type": "api-key",\n            "uuid": "da22b2d4-8ip0-43ca-b28d-500sd0a5d876e",\n            "created_on": "2018-05-05T18:04:05Z",\n            "updated_on": "2021-05-05T18:04:05Z"\n        }\n')),(0,s.kt)("p",null,"Please refer to section ",(0,s.kt)("a",{parentName:"p",href:"/argo-api-authn/docs/api_errors"},"Errors")," to see all possible Errors"),(0,s.kt)("h2",{id:"get-manage-auth-methods---list-all-auth-methods"},"[GET]"," Manage Auth Methods - List All Auth Methods"),(0,s.kt)("h3",{id:"request-3"},"Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /v1/authm`\n")),(0,s.kt)("h3",{id:"example-request-3"},"Example request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'  curl -X GET -H "Content-Type: application/json"\n  "https://{URL}/v1/authm?key={key_in_the_config}"\n')),(0,s.kt)("p",null,"If the request is successful, the response contains information for all the auth methods."),(0,s.kt)("h4",{id:"success-response-1"},"Success Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'{\n  "auth_methods": [\n        {\n            "access_key": "key1",\n            "host": "127.0.0.1",\n            "service_uuid": "da22b2d4-ba6c-43ca-b28d-400sd0a5d83e",\n            "port": 9000,\n            "type": "api-key",\n            "uuid": "da22b2d4-8ip0-43ca-b28d-500sd0a5d876e",\n            "created_on": "2018-05-05T18:04:05Z",\n            "updated_on": "2021-05-05T18:04:05Z"\n        },\n        {\n            "access_key": "key1",\n            "host": "host2",\n            "service_uuid": "da22b2d4-ba6c-43ca-b28d-400sd0a5d83e",\n            "port": 9000,\n            "type": "api-key",\n            "uuid": "da22b2d4-9kl2-43ca-b28d-500sd0a5d876e",\n            "created_on": "2018-05-05T18:04:05Z",\n            "updated_on": "2021-05-05T18:04:05Z"\n        }\n  ]\n}\n')),(0,s.kt)("p",null,"Please refer to section ",(0,s.kt)("a",{parentName:"p",href:"/argo-api-authn/docs/api_errors"},"Errors")," to see all possible Errors"),(0,s.kt)("h2",{id:"put-manage-auth-methods---update-an-existing-auth-method"},"[PUT]"," Manage Auth Methods - Update an existing auth method"),(0,s.kt)("p",null,"This request updates the auth method for the given service-type and host.\nThis request can update one or more fields with one call."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"PUT /v1/service-types/{service-type}/hosts/{host}/authm\n")),(0,s.kt)("h3",{id:"example-request-4"},"Example request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl -X PUT -H "Content-Type: application/json"\n  "https://{URL}/v1/service-types/{Name}/authm?key={key_in_the_config}"\n')),(0,s.kt)("h3",{id:"post-body-2"},"Post Body"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'        {\n            "port": 8080,\n            "access_key": "key2"\n        }\n')),(0,s.kt)("h3",{id:"response-1"},"Response"),(0,s.kt)("p",null,"If the request is successful, the response contains the updated auth method."),(0,s.kt)("p",null,"Success Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"200 OK")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'        {\n            "access_key": "key2",\n            "host": "127.0.0.1",\n            "service_uuid": "da22b2d4-ba6c-43ca-b28d-400sd0a5d83e",\n            "port": 8080,\n            "type": "api-key",\n            "uuid": "da22b2d4-8ip0-43ca-b28d-500sd0a5d876e",\n            "created_on": "2018-05-05T18:04:05Z",\n            "updated_on": "2021-05-05T18:04:05Z"\n        }\n')),(0,s.kt)("p",null,"Please refer to section ",(0,s.kt)("a",{parentName:"p",href:"/argo-api-authn/docs/api_errors"},"Errors")," to see all possible Errors"),(0,s.kt)("h2",{id:"delete-manage-auth-methods---delete-an-auth-method"},"[DELETE]"," Manage Auth Methods - Delete an auth method"),(0,s.kt)("p",null,"This request deletes an auth method associated with the provided service-type and host."),(0,s.kt)("h3",{id:"request-4"},"Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"DELETE /v1/service-types/{service-type}/hosts/{host}/authm\n")),(0,s.kt)("h3",{id:"response-2"},"Response"),(0,s.kt)("p",null,"If the request is successful, the response is empty."),(0,s.kt)("h4",{id:"success-response-2"},"Success Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"204 No Content")),(0,s.kt)("p",null,"Please refer to section ",(0,s.kt)("a",{parentName:"p",href:"/argo-api-authn/docs/api_errors"},"Errors")," to see all possible Errors"))}u.isMDXComponent=!0}}]);