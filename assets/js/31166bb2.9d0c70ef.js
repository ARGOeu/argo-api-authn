"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[938],{7493:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var i=s(4848),r=s(8453);const n={id:"utility_scripts",title:"Utility Scripts",sidebar_position:8},c="Python utility scripts for easier interaction with the service",o={id:"utility_scripts",title:"Utility Scripts",description:"| Script | Description | Shortcut |",source:"@site/docs/utility_scripts.md",sourceDirName:".",slug:"/utility_scripts",permalink:"/argo-api-authn/docs/utility_scripts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"utility_scripts",title:"Utility Scripts",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Errors",permalink:"/argo-api-authn/docs/api_errors"}},a={},d=[{value:"AMS Create users from goc db script",id:"ams-create-users-gocdb",level:2},{value:"AMS Create users and topics per site",id:"ams-create-users-cloud-info",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Requirements",id:"requirements",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"python-utility-scripts-for-easier-interaction-with-the-service",children:"Python utility scripts for easier interaction with the service"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Script"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Shortcut"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ams-create-users-gocdb.py"}),(0,i.jsx)(t.td,{children:"Python script that creates ams users and binding."}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#ams-create-users-gocdb",children:"Details"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ams-create-users-cloud-info.py"}),(0,i.jsx)(t.td,{children:"Python script that creates ams users, binding and topics per site."}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"#ams-create-users-cloud-info",children:"Details"})})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"ams-create-users-gocdb",children:"AMS Create users from goc db script"}),"\n",(0,i.jsx)(t.p,{children:"Python utility script that takes the xml feed from goc db,creates the respective\nams users under the specified project, assigns to the correct project's topic and\nfinally creates the binding for each user, using the dn from goc db."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"ams-create-users-gocdb.py -c <ConfigPath> -verify"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"-c : Path to an appropriate config file.If not specified it will first look at /etc/argo-api-authn/conf.d/ams-users-create-gocdb.cfg and then will look at projects conf folder"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"-verify: If specified all the requests will check the validity of the ssl certificate"})}),"\n",(0,i.jsx)(t.h2,{id:"ams-create-users-cloud-info",children:"AMS Create users and topics per site"}),"\n",(0,i.jsxs)(t.p,{children:["Python utility script that takes an xml feed from goc db, creates the respective\nams users under the specified project, assigns to the correct project's topic,\ncreates the binding for each user, using the dn from goc db and finally creates\ntopics with the schema SITE_",(0,i.jsx)(t.code,{children:"sitename"}),"_ENDPOINT_",(0,i.jsx)(t.code,{children:"id_in_gocdb"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"ams-create-users-cloud-info.py -c <ConfigPath> -verify"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"-c : Path to an appropriate config file.If not specified it will first look at /etc/argo-api-authn/conf.d/ams-create-users-cloud-info.cfg and then will look at projects conf folder"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"-verify: If specified all the requests will check the validity of the ssl certificate"})}),"\n",(0,i.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["Use the ",(0,i.jsx)(t.code,{children:"ams-create-users-gocdb.template"})," or ",(0,i.jsx)(t.code,{children:"ams-create-users-cloud-info.template"}),"\nrespectively to produce your conf file.\nThe project should exist in AMS in advance.\nThe service types specified should also be present as topics in ams under the specified project"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-buildoutcfg",children:"[AMS]\n# under which ams project, the users will be created\nams_project:\n# goc db url to pull user data\ngoc_db_host:\n# service types referes to the different service types that will we should keep from the xml and assign them to the respectivew ams topic \nservice-types:\n# cert to access gocdb\ncert: /path/to/cert\ncert_key: /path/to/key\n# ams use role\nusers_role: publisher\n# token to access ams\nams_token:\n# ams url\nams_host:\n# ams user email - since we don't get an email from goc db, we can use this field as a wildcard, to identify which users were created with this script\nams_email: goc_db_user\n\n[AUTHN]\n# token to access authn\nauthn_token:\n# authn url to create bindings\nauthn_host: \n# service's uuid where bindings will belong\nservice_uuid:\n# service's host where bindings will belong\nservice_host:\n\n[LOGS]\nsyslog_socket:\n"})}),"\n",(0,i.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(t.p,{children:["There is a requirements.txt file inside the repo's ",(0,i.jsx)(t.code,{children:"bin"})," folder that specifies which dependencies are needed."]}),"\n",(0,i.jsx)(t.p,{children:"If you don't want to manually handle the dependencies, you can use the setup.py script in the root folder of the repo."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"python setup.py install"})}),"\n",(0,i.jsx)(t.p,{children:"OR"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"pip install git+https://github.com/ARGOeu/argo-api-authn.git@devel"})," for the latest release"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"pip install git+https://github.com/ARGOeu/argo-api-authn.git"})," for the stable release"]}),"\n",(0,i.jsxs)(t.p,{children:["After installing the script's package, you can find them in the ",(0,i.jsx)(t.code,{children:"/usr/bin"})," or if you are using a virtualenv in the ",(0,i.jsx)(t.code,{children:"bin"})," folder of the virtualenv."]}),"\n",(0,i.jsx)(t.p,{children:"In addition, if you want to use them in other scripts, you will can import them:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"import argo_api_authn_scripts   \n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>o});var i=s(6540);const r={},n=i.createContext(r);function c(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);