# ARGO Authentication Service expressed in swagger
swagger: '2.0'
info:
  title: argo-api-authN
  description: "The purpose of the Authentication Service is to provide the ability to different services to use alternative authentication mechanisms without having to store additional user info or implement new functionalities.The AUTH service typetypeholds various information about a serviceâ€™s users, hosts, API urls, etc, and leverages them to provide its function."
  version: "v1"
  contact:
    name: ARGO Developers
    url: http://argoeu.github.io/
    email: argo-dev@lists.grnet.gr

host: localhost
basePath: /v1
schemes:
  - https
produces:
  - application/json
tags:
  - name: Bindings
    description: Bindings under a given service type
  - name: Authentication Methods
    description: Authentication Method under a given service type
  - name: Service Types
    description: Service Types available in the service

paths:

  /service-types:
    post:
      summary: Create a new service type
      description: |
        Create a new service type
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: Service Type information
          in: body
          description: Required service type information
          required: true
          schema:
           type: object
           properties:
             name:
               type: string
             hosts:
                type: array
                items:
                  type: string
             auth_types:
                type: array
                items:
                  type: string
             auth_method:
              type: string
             retrieval_field:
              type: string
      tags:
        - Service Types
      responses:
        201:
          description: Returns the newly created service type
          schema:
            $ref: '#/definitions/ServiceType'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        409:
          $ref: "#/responses/409"
        422:
          $ref: '#/responses/422'
        500:
          $ref: "#/responses/500"

    get:
      summary: Lists all service types
      description: Lists all service types
      parameters:
          - $ref: '#/parameters/ApiKey'
      tags:
        - Service Types
      responses:
        200:
          description: Returns a list of all service types
          schema:
            $ref: '#/definitions/ServiceTypes'
        500:
          $ref: "#/responses/500"

  /service-types/{Name}:
    get:
      summary: Retrieve information for a specific service type
      description: |
        Retrieve information for a specific service type
      parameters:
        - name: Name
          in: path
          description: Name of the service type
          required: true
          type: string
        - $ref: '#/parameters/ApiKey'
      tags:
        - Service Types
      responses:
        200:
          description: Returns the information of the requested service type
          schema:
            $ref: '#/definitions/ServiceType'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: '#/responses/404'
        500:
          $ref: "#/responses/500"

  /service-types/{Name}/hosts/{Host}/authM:
    get:
      summary: Retrieve authentication method information for a specific service type and host
      description: |
        Retrieve information for a specific service type
      parameters:
        - name: Name
          in: path
          description: Name of the service type
          required: true
          type: string
        - name: Host
          in: path
          description: Name of the host
          required: true
          type: string
        - $ref: '#/parameters/ApiKey'
      tags:
        - Authentication Methods
      responses:
        200:
          description: Returns the information of the requested auth method
          schema:
            $ref: '#/definitions/APIKeyAuthMethod'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: '#/responses/404'
        500:
          $ref: "#/responses/500"

  /authM:
    get:
      summary: Retrieve information for all authentication methods
      description: |
        Retrieve information for a specific service type
      parameters:
        - $ref: '#/parameters/ApiKey'
      tags:
        - Authentication Methods
      responses:
        200:
          description: Returns the information of all authentication methods
          schema:
            $ref: '#/definitions/APIKeyAuthMethods'
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        500:
          $ref: "#/responses/500"

    post:
      summary: Create a new auth method
      description: |
        Create a new auth method
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: auth method information
          in: body
          description: Required auth method information
          required: true
          schema:
           type: object
           properties:
            type:
              type: string
            service_uuid:
              type: string
            host:
              type: string
            path:
              type: string
            port:
              type: integer
            access_key:
              type: string

      tags:
        - Authentication Methods
      responses:
        201:
          description: Returns the newly created auth method
          schema:
            $ref: '#/definitions/APIKeyAuthMethod'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        422:
          $ref: '#/responses/422'
        500:
          $ref: "#/responses/500"

  /bindings:
    post:
      summary: Create a new binding
      description: |
        Create a new binding
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: binding information
          in: body
          description: Required binding information
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              service_uuid:
                type: string
              host:
                type: string
              dn:
                type: string
              oidc_token:
                type: string
              unique_key:
                type: string
      tags:
        - Bindings
      responses:
        201:
          description: Returns the newly created binding
          schema:
            $ref: '#/definitions/Binding'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        422:
          $ref: '#/responses/422'
        500:
          $ref: "#/responses/500"
    get:
      summary: Get all bindings
      description: |
        Get all Bindings in the service
      parameters:
        - $ref: '#/parameters/ApiKey'
      tags:
        - Bindings
      responses:
        200:
          description: Returns all the bindings
          schema:
            $ref: '#/definitions/Bindings'
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        500:
          $ref: "#/responses/500"

  /service-types/{Name}/hosts/{Host}/bindings:
    get:
      summary: Retrieve all bindings of a specific service type and host
      description: |
        Retrieve all the bindings of a specific service type and host
      parameters:
        - name: Name
          in: path
          description: Name of the service type
          required: true
          type: string
        - name: Host
          in: path
          description: Name of the host
          required: true
          type: string
        - $ref: '#/parameters/ApiKey'
      tags:
        - Bindings
      responses:
        200:
          description: Returns all the bidnings of a specific service type and host
          schema:
            $ref: '#/definitions/Bindings'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: '#/responses/404'
        500:
          $ref: "#/responses/500"

  /service-types/{Name}/hosts/{Host}/bindings/{DN}:
    get:
      summary: Return the binding's information associated with the dn,service type and host given
      description: |
        Retrieve information about a specific binding
      parameters:
        - name: Name
          in: path
          description: Name of the service type
          required: true
          type: string
        - name: Host
          in: path
          description: Name of the host
          required: true
          type: string
        - name: DN
          in: path
          description: Binding's dn
          required: true
          type: string
        - $ref: '#/parameters/ApiKey'
      tags:
        - Bindings
      responses:
        200:
          description: Return the binding's information associated with the dn,service type and host provided
          schema:
            $ref: '#/definitions/Binding'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: '#/responses/404'
        500:
          $ref: "#/responses/500"
    patch:
      summary: Updates a binding
      description: |
        Update a binding
      parameters:
        - name: Name
          in: path
          description: Name of the service type
          required: true
          type: string
        - name: Host
          in: path
          description: Name of the host
          required: true
          type: string
        - name: DN
          in: path
          description: Binding's dn
          required: true
          type: string
        - name: binding information
          in: body
          description: Required binding information - The request body can contain one or more fields that need to be updated.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              service_uuid:
                type: string
              host:
                type: string
              dn:
                type: string
              oidc_token:
                type: string
              unique_key:
                type: string
        - $ref: '#/parameters/ApiKey'

      tags:
        - Bindings
      responses:
        201:
          description: Returns the updated binding
          schema:
            $ref: '#/definitions/Binding'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        422:
          $ref: '#/responses/422'
        500:
          $ref: "#/responses/500"

parameters:
  ApiKey:
    name: key
    in: query
    description: user key token for authentication
    required: true
    type: string
    default: SecretKey123

responses:
  400:
    description: Invalid argument used
    schema:
      $ref: '#/definitions/ErrorMsg'
  401:
    description: Unauthorized user based on key
    schema:
      $ref: '#/definitions/ErrorMsg'
  403:
    description: Access Forbidden for the user on the resource
    schema:
      $ref: '#/definitions/ErrorMsg'
  404:
    description: Item not found
    schema:
      $ref: '#/definitions/ErrorMsg'
  408:
    description: Server timed out waiting for the request
    schema:
      $ref: '#/definitions/ErrorMsg'
  409:
    description: Item already exists!
    schema:
      $ref: '#/definitions/ErrorMsg'
  422:
    description: Unprocessable Entity
    schema:
      $ref: '#/definitions/ErrorMsg'
  500:
    description: Internal Error
    schema:
      $ref: '#/definitions/ErrorMsg'


definitions:

  Binding:
    type: object
    properties:
      name:
        type: string
      service_uuid:
        type: string
        description: the service type that the binding will belong to
      host:
        type: string
        description: a host assosciated with the declared service type
      dn:
        type: string
        description: the dn of the certificate
      oidc_token:
        type: string
      unique_key:
        type: string
        description: contains the resource to be used to authenticate against the assosciated service type
      created_on:
        type: string
      last_auth:
        type: string

  Bindings:
    type: object
    properties:
      bindings:
        type: array
        items:
          $ref: '#/definitions/Binding'


  ServiceType:
    type: object
    properties:
      name:
        type: string
        description: Name of the topic
      hosts:
        type: array
        items:
          type: string
        description: hosts that run this service type
      auth_types:
        type: array
        items:
          type: string
        description: supported authentication types
      auth_method:
        type: string
        description: the authentication method that the sercvice supports
      uuid:
        type: string
        description: uuid assosiciatd with the service type
      retrieval_field:
        type: string
        description: name of the response field which contains the value we are looking for
      created_on:
        type: string
        description: datetime of creation

  APIKeyAuthMethods:
    type: object
    properties:
      auth_methods:
        type: array
        items:
          $ref: '#/definitions/APIKeyAuthMethod'


  APIKeyAuthMethod:
    type: object
    properties:
      access_key:
        type: string
        description: key needed too access the service type
      path:
        type: string
        description: service type exposed path to query users
      host:
        type: string
        description: host of the service type
      service_uuid:
        type: string
        description: uuid that is assosciated with the service the auth method is used for
      port:
        type: integer
        description: port of the service type host
      type:
        type: string
        description: api-key, x-api-token (type of auth method)

  ServiceTypes:
    type: object
    properties:
      service_types:
        type: array
        items:
          $ref: '#/definitions/ServiceType'

  Host:
    type: object
    properties:
      name:
        type: string
        description: hostname

  AuthType:
    type: object
    properties:
      name:
        type: string
        description: type name

  ErrorMsg:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: string
            description: code of the error
          message:
            type: string
            description: general message of the error
          status:
            type: string
            description: status of the error
